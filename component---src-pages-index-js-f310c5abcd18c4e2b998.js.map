{"version":3,"sources":["webpack:///./src/components/Header.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TitleAndDescription","data","title","site","siteMetadata","description","Header","query","render","Layout","props","edges","allMarkdownRemark","map","edge","frontmatter","node","key","path","to","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","StaticQuery","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"oSAGMA,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvBC,EAAQD,EAAKE,KAAKC,aAAaF,MAC/BG,EAAcJ,EAAKE,KAAKC,aAAaC,YAE3C,OACE,6BACE,4BAAKH,GACL,2BAAIG,KAuBKC,EAlBA,WACb,OACE,kBAAC,IAAD,CACEC,MAAK,aAULC,OAAQ,SAAAP,GAAI,OAAI,kBAAC,EAAD,CAAqBA,KAAMA,KAX7C,UCjBJ,sCAIA,IA0BaM,EAAK,aAkBHE,UA5CA,SAACC,GAAW,IAEjBC,EAAUD,EAAMT,KAAKW,kBAArBD,MAER,OACE,6BACE,kBAAC,EAAD,MAEEA,EAAME,KAAI,SAAAC,GAAS,IACTC,EAAgBD,EAAKE,KAArBD,YACR,OACE,yBAAKE,IAAKF,EAAYG,MACpB,kBAAC,IAAD,CAAMC,GAAIJ,EAAYG,MACnBH,EAAYb,WAMvB,6BACE,kBAAC,IAAD,CAAMiB,GAAG,SAAT,qB,kCCxBR,wIAcyBC,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBzB,EAAuB,EAAvBA,KAAMM,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACzDmB,EAAY1B,EACdA,EAAKA,KACLyB,EAAgBnB,IAAUmB,EAAgBnB,GAAON,KAErD,OACE,kBAAC,IAAM2B,SAAP,KACGD,GAAanB,EAAOmB,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAnB,GAAU,IACpBT,EAAkCS,EAAlCT,KAAMM,EAA4BG,EAA5BH,MAAOC,EAAqBE,EAArBF,OAAQsB,EAAapB,EAAboB,SAE7B,OACE,kBAACR,EAAmBS,SAApB,MACG,SAAAL,GAAe,OACd,kBAACD,EAAD,CACExB,KAAMA,EACNM,MAAOA,EACPC,OAAQA,GAAUsB,EAClBJ,gBAAiBA,S,qBCzC3B,IAAsBM,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEhB,IAAMiB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-f310c5abcd18c4e2b998.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nconst TitleAndDescription = ({ data }) => {\r\n  const title = data.site.siteMetadata.title\r\n  const description = data.site.siteMetadata.description\r\n\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      <p>{description}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          site {\r\n            siteMetadata {\r\n              title\r\n              description\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={data => <TitleAndDescription data={data} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\"\r\nimport { graphql, Link } from 'gatsby'\r\nimport Header from '../components/Header'\r\n\r\nconst Layout = (props) => {\r\n  \r\n  const { edges } = props.data.allMarkdownRemark\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {\r\n        edges.map(edge => {\r\n          const { frontmatter } = edge.node\r\n          return (\r\n            <div key={frontmatter.path}>\r\n              <Link to={frontmatter.path}>\r\n                {frontmatter.title}\r\n              </Link>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      <div>\r\n        <Link to=\"/tags\">Browse by Tag</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query HomepageQuery {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            path\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Layout;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}