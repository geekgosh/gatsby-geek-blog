{"version":3,"sources":["webpack:///./node_modules/process/browser.js","webpack:///./node_modules/core-js/modules/es6.object.freeze.js","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/core-js/modules/es6.object.define-properties.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./node_modules/core-js/modules/es6.array.find.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","isObject","meta","onFreeze","$freeze","it","$export","$find","KEY","forced","P","F","findIndex","callbackfn","undefined","Object","defineProperty","value","ex","id","firebase","tslib","util","logger$1","DOMStorageWrapper","domStorage_","prefix_","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","var_args","_i","message","isArray","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","error","fatal","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","bits","Infinity","Math","abs","pow","min","floor","LN2","round","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","stack","beingCrawled","search","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","decodeQuery","parts","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newPriority","newIndexMap","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","USE_HINZE","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","OperationType","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","validateContextObject","valueCallback","removeEventCallbackForQuery","userCallback","failureCallbackOrContext","firstCall","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","forEachTree","prefixPath","func","resolveDeferredValue","existing","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","unused","delta","existingVal","resolveDeferredValueSnapshot","rawPri","leafNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","getToken","forceRefresh","then","Promise","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","options","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","headers","platform","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","console","_e","_f","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","syncTree","resolvedTree","resolveDeferredValueTree","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","_increment","x","__awaiter","__generator","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","_forceRestClient","registerDatabase","instance","registerService","S"],"mappings":"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","file":"23-1eba2e719e7e7509d713.js","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","'use strict';\n\nrequire(\"core-js/modules/es6.object.freeze\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.define-properties\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\n\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param {string} key The key to save the value under\r\n   * @param {?Object} value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   * @return {*} The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return util.jsonEval(storedVal);\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   */\n\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n  /**\r\n   * @param {string} name\r\n   * @return {string}\r\n   */\n\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (util.contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new logger$1.Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = util.stringToByteArray(str);\n  var sha1 = new util.Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return util.base64.encodeByteArray(sha1Bytes);\n};\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\n\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < var_args.length; i++) {\n    if (Array.isArray(var_args[i]) || var_args[i] && typeof var_args[i] === 'object' && typeof var_args[i].length === 'number') {\n      message += buildLogMessage_.apply(null, var_args[i]);\n    } else if (typeof var_args[i] === 'object') {\n      message += util.stringify(var_args[i]);\n    } else {\n      message += var_args[i];\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = logger$1.LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) SessionStorage.set('logging_enabled', true);\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\n\n\nvar log = function log() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) enableLogging(true);\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, var_args);\n    logger(message);\n  }\n};\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\n\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var var_args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      var_args[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, tslib.__spread([prefix], var_args));\n  };\n};\n/**\r\n * @param {...string} var_args\r\n */\n\n\nvar error = function error() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(var_args));\n  logClient.error(message);\n};\n/**\r\n * @param {...string} var_args\r\n */\n\n\nvar fatal = function fatal() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(var_args));\n  logClient.error(message);\n  throw new Error(message);\n};\n/**\r\n * @param {...*} var_args\r\n */\n\n\nvar warn = function warn() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(var_args));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data != data || // NaN\n  data == Number.POSITIVE_INFINITY || data == Number.NEGATIVE_INFINITY);\n};\n/**\r\n * @param {function()} fn\r\n */\n\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (util.isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false);\n    } else if (document.attachEvent) {\n      // IE.\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') wrappedFn_1();\n      }); // fallback to onload.\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\n\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\n  }\n};\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\n\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) return util.stringify(obj);\n  var keys = [];\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) key += ',';\n    key += util.stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1,\n      s,\n      e,\n      f,\n      ln,\n      i,\n      bits,\n      str; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) hexByte = '0' + hexByte;\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code == 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code == 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time);\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string|Array.<string>} pathOrString Path string to parse,\r\n   *      or another path, or the raw tokens array\r\n   * @param {number=} pieceNum\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Object.defineProperty(Path, \"Empty\", {\n    /**\r\n     * Singleton to represent an empty path\r\n     *\r\n     * @const\r\n     */\n    get: function get() {\n      return new Path('');\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Path.prototype.getFront = function () {\n    if (this.pieceNum_ >= this.pieces_.length) return null;\n    return this.pieces_[this.pieceNum_];\n  };\n  /**\r\n   * @return {number} The number of segments in this path\r\n   */\n\n\n  Path.prototype.getLength = function () {\n    return this.pieces_.length - this.pieceNum_;\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.popFront = function () {\n    var pieceNum = this.pieceNum_;\n\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n\n    return new Path(this.pieces_, pieceNum);\n  };\n  /**\r\n   * @return {?string}\r\n   */\n\n\n  Path.prototype.getBack = function () {\n    if (this.pieceNum_ < this.pieces_.length) return this.pieces_[this.pieces_.length - 1];\n    return null;\n  };\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') pathString += '/' + this.pieces_[i];\n    }\n\n    return pathString || '/';\n  };\n\n  Path.prototype.toUrlEncodedString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n    }\n\n    return pathString || '/';\n  };\n  /**\r\n   * Shallow copy of the parts of the path.\r\n   *\r\n   * @param {number=} begin\r\n   * @return {!Array<string>}\r\n   */\n\n\n  Path.prototype.slice = function (begin) {\n    if (begin === void 0) {\n      begin = 0;\n    }\n\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  };\n  /**\r\n   * @return {?Path}\r\n   */\n\n\n  Path.prototype.parent = function () {\n    if (this.pieceNum_ >= this.pieces_.length) return null;\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @param {string|!Path} childPathObj\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.child = function (childPathObj) {\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    if (childPathObj instanceof Path) {\n      for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      var childPieces = childPathObj.split('/');\n\n      for (var i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) pieces.push(childPieces[i]);\n      }\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @return {boolean} True if there are no segments in this path\r\n   */\n\n\n  Path.prototype.isEmpty = function () {\n    return this.pieceNum_ >= this.pieces_.length;\n  };\n  /**\r\n   * @param {!Path} outerPath\r\n   * @param {!Path} innerPath\r\n   * @return {!Path} The path from outerPath to innerPath\r\n   */\n\n\n  Path.relativePath = function (outerPath, innerPath) {\n    var outer = outerPath.getFront(),\n        inner = innerPath.getFront();\n\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n    }\n  };\n  /**\r\n   * @param {!Path} left\r\n   * @param {!Path} right\r\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n   */\n\n\n  Path.comparePaths = function (left, right) {\n    var leftKeys = left.slice();\n    var rightKeys = right.slice();\n\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n      if (cmp !== 0) return cmp;\n    }\n\n    if (leftKeys.length === rightKeys.length) return 0;\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  };\n  /**\r\n   *\r\n   * @param {Path} other\r\n   * @return {boolean} true if paths are the same.\r\n   */\n\n\n  Path.prototype.equals = function (other) {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   *\r\n   * @param {!Path} other\r\n   * @return {boolean} True if this path is a parent (or the same as) other\r\n   */\n\n\n  Path.prototype.contains = function (other) {\n    var i = this.pieceNum_;\n    var j = other.pieceNum_;\n\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n\n      ++i;\n      ++j;\n    }\n\n    return true;\n  };\n\n  return Path;\n}(); // end Path\n\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path Initial Path.\r\n   * @param {string} errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    /** @type {!Array<string>} */\n\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += util.stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function get() {\n      return 32;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function get() {\n      return 768;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @param {string} child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += util.stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= util.stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   *\r\n   * @return {string}\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length == 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f';\nvar FORGE_DOMAIN = 'firebaseio.com';\nvar LAST_SESSION_PARAM = 'ls';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string} host Hostname portion of the url for the repo\r\n   * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n   * @param {string} namespace The namespace represented by the repo\r\n   * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param {string=} persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost() || this.includeNamespaceInQueryParams;\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param {string} type of connection\r\n   * @param {Object} params list\r\n   * @return {string} The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    util.assert(typeof type === 'string', 'typeof type must == string');\n    util.assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    each(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    return (this.secure ? 'https://' : 'http://') + this.host;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\n\n\nvar parseRepoInfo = function parseRepoInfo(dataURL) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace == 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace != parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\n\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = dataURL.length;\n    }\n\n    var parts = host.split('.');\n\n    if (parts.length === 3) {\n      // Normalize namespaces to lowercase to share storage / connection.\n      domain = parts[1];\n      subdomain = parts[0].toLowerCase(); // We interpret the subdomain of a 3 component URL as the namespace name.\n\n      namespace = subdomain;\n    } else if (parts.length === 2) {\n      domain = parts[0];\n    } else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\n\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && util.contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) return;\n  validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && util.stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = curPath.slice();\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(Path.comparePaths);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) return;\n  var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, path.child(curPath));\n\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) return;\n  if (isInvalidJSONNumber(priority)) throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).'); // Special case to allow importing data with a .sv.\n\n  if (!isValidPriority(priority)) throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) return;\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) return;\n  if (!isValidKey(key)) throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) return;\n  if (!isValidPathString(pathString)) throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) return;\n  if (typeof bool !== 'boolean') throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Repo} repo_\r\n   * @param {!Path} path_\r\n   */\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    util.validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {number|string|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    util.validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   * @constructor\r\n   * @dict\r\n   * @param {boolean} committed\r\n   * @param {DataSnapshot} snapshot\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\n\nvar nextPushId = function () {\n  // Modeled after base64 web-safe chars, but ordered by ASCII.\n  var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'; // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    util.assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    util.assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  /**\r\n   *\r\n   * @param {!string} name\r\n   * @param {!Node} node\r\n   * @return {NamedNode}\r\n   */\n\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @constructor\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   * @param {!Node} oldNode\r\n   * @param {!Node} newNode\r\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\n\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') return 'number:' + doubleToIEEE754String(priority);else return 'string:' + priority;\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    util.assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && util.contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @implements {Node}\r\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n   *                                         The object type is possible in the event of a deferred value\r\n   * @param {!Node=} priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) return {\n      '.value': this.getValue(),\n      '.priority': this.getPriority().val()\n    };else return this.getValue();\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n      if (!this.priorityNode_.isEmpty()) toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return {Object|string|number|boolean} The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      util.assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   * @param {!LeafNode} otherLeaf\r\n   * @return {!number}\r\n   * @private\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   * @type {Array.<!string>}\r\n   * @const\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V, T\r\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n   * @param {?K} startKey\r\n   * @param {function(K, K): number} comparator\r\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n   * @param {(function(K, V):T)=} resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    /** @private\r\n     * @type {Array.<!LLRBNode>}\r\n     */\n\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) cmp *= -1;\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) return null;\n    var node = this.nodeStack_.pop();\n    var result;\n    if (this.resultGenerator_) result = this.resultGenerator_(node.key, node.value);else result = {\n      key: node.key,\n      value: node.value\n    };\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) return null;\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {!K} key Key associated with this node.\r\n   * @param {!V} value Value associated with this node.\r\n   * @param {?boolean} color Whether this node is red.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param {?K} key New key for the node, or null.\r\n   * @param {?V} value New value for the node, or null.\r\n   * @param {?boolean} color New color for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n   * @return {!LLRBNode} The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {*} True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return {!Object} The minimum node in the tree.\r\n   * @private\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Object} key Key to insert.\r\n   * @param {!Object} value Value to insert.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var cmp, n;\n    n = this;\n    cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) n = n.moveRedLeft_();\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param {!Object} key The key of the item to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) n = n.rotateRight_();\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n    if (n.right.isRed_() && !n.left.isRed_()) n = n.rotateLeft_();\n    if (n.left.isRed_() && n.left.left.isRed_()) n = n.rotateRight_();\n    if (n.left.isRed_() && n.right.isRed_()) n = n.colorFlip_();\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @private\r\n   * @return {boolean} True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBNode.prototype.check_ = function () {\n    var blackDepth;\n\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return {!LLRBEmptyNode} The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBEmptyNode} New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {function(K, K):number} comparator_ Key comparator.\r\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @return {!SortedMap.<K, V>} New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @return {!SortedMap.<K, V>} New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param {!K} key The key to look up.\r\n   * @return {?V} The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param {K} key The key to find the predecessor of\r\n   * @return {?K} The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return {boolean} True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return {number} The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return {?K} The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return {?K} The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @template T\r\n   * @param {(function(K, V):T)=} resultGenerator\r\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   * @const\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n/**\r\n * @constructor\r\n */\n\nvar Base12Num =\n/** @class */\nfunction () {\n  /**\r\n   * @param {number} length\r\n   */\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length == 0) {\n      return null;\n    } else if (length == 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12);\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = util.safeGet(this.indexes_, indexKey);\n    if (!sortedMap) throw new Error('No index defined for ' + indexKey);\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return util.contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = tslib.__assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = tslib.__assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\n      var index = util.safeGet(_this.indexSet_, indexName);\n      util.assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name != namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = util.map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!SortedMap.<string, !Node>} children_ List of children\r\n   * of this node..\r\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n   * @param {!IndexMap} indexMap_\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = path.getFront();\n    if (front === null) return this;\n    return this.getImmediateChild(front).getChild(path.popFront());\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    util.assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0,\n          newPriority = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) return null;\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = [];\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n      if (!this.getPriority().isEmpty()) toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n        if (childHash !== '') toHash_1 += ':' + key + ':' + childHash;\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n  /**\r\n   *\r\n   * @param {!NamedNode} startPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n  /**\r\n   * @param {!NamedNode} endPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   * @private\r\n   * @param {!Index} indexDefinition\r\n   * @return {?SortedMap.<NamedNode, Node>}\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n  /**\r\n   * @private\r\n   * @type {RegExp}\r\n   */\n\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\n\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  tslib.__extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  util.assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length == 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (util.contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) node_1 = node_1.updateImmediateChild(key, childNode);\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    return NamedNode.MAX;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  /**\r\n   * @param {!Node} snap\r\n   * @return {!Node}\r\n   * @protected\r\n   */\n\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return this.indexPath_.slice().join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_ A SnapshotNode to wrap.\r\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n   * @param {!Index} index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {!DataSnapshot} DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {boolean} Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return {string|number|null} The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param {function(!DataSnapshot)} action Callback function to be called\r\n   * for each child.\r\n   * @return {boolean} True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    util.validateCallback('DataSnapshot.forEach', 1, action, false);\n    if (this.node_.isLeafNode()) return false;\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    if (this.node_.isLeafNode()) return false;else return !this.node_.isEmpty();\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return {number} The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n   * @param {!DataSnapshot} snapshot The data backing the event\r\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + util.stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {EventRegistration} eventRegistration\r\n   * @param {Error} error\r\n   * @param {!Path} path\r\n   */\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?function(!DataSnapshot)} callback_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {?Object} context_\r\n   */\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {Object=} context_\r\n   */\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return util.contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    util.assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(\n    /** @type {!string} */\n    change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName != MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName != MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n      }\n    } else {\n      util.assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   * @param {!string} fnName\r\n   * @private\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   */\n\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n  /**\r\n   * @return {!Reference}\r\n   */\n\n\n  Query.prototype.getRef = function () {\n    util.validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @param {!function(DataSnapshot, string=)} callback\r\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n   * @param {Object=} context\r\n   * @return {!function(DataSnapshot, string=)}\r\n   */\n\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    util.validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    util.validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n  /**\r\n   * @param {!function(!DataSnapshot)} callback\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {string=} eventType\r\n   * @param {(function(!DataSnapshot, ?string=))=} callback\r\n   * @param {Object=} context\r\n   */\n\n\n  Query.prototype.off = function (eventType, callback, context) {\n    util.validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    util.validateCallback('Query.off', 2, callback, true);\n    util.validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   * @param {!string} eventType\r\n   * @param {!function(!DataSnapshot, string=)} userCallback\r\n   * @param failureCallbackOrContext\r\n   * @param context\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    util.validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    util.validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new util.Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise[\"catch\"](function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) ret.cancel.bind(ret.context)(err);\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   * @param {!string} path\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (parsedPath.isEmpty()) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   * @param {number|string|boolean|null} value\r\n   * @param {string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return {!string} URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    util.validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   * @return {!Object}\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return this.queryParams_.getQueryObject();\n  };\n  /**\r\n   * @return {!string}\r\n   */\n\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   * @param {Query} other\r\n   * @return {boolean}\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = this.path.equals(other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param {!string} fnName The function name (on or once)\r\n   * @param {(function(Error)|Object)=} cancelOrContext\r\n   * @param {Object=} context\r\n   * @return {{cancel: ?function(Error), context: ?Object}}\r\n   * @private\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      util.validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      util.validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(util.errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    this.value = null;\n    this.children = new Map();\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!path.isEmpty() && this.children.size > 0) {\n      var childKey = path.getFront();\n      path = path.popFront();\n\n      if (this.children.has(childKey)) {\n        var childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @param data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (path.isEmpty()) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      var childKey = path.getFront();\n\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children.get(childKey);\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (path.isEmpty()) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value;\n          this.value = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        var childKey = path.getFront();\n        path = path.popFront();\n\n        if (this.children.has(childKey)) {\n          var safeToRemove = this.children.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children[\"delete\"](childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param prefixPath Path to look up node for.\r\n   * @param func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    this.children.forEach(function (tree, key) {\n      func(key, tree);\n    });\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\n\n\nvar resolveDeferredValue = function resolveDeferredValue(value, existing, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existing, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existing);\n  } else {\n    util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      util.assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    util.assert(false, 'Unexpected increment value: ' + delta);\n  } // Incrementing a non-number sets the value to the incremented amount\n\n\n  if (!existing.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existing;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(tree, syncTree, serverValues) {\n  var resolvedTree = new SparseSnapshotTree();\n  tree.forEachTree(new Path(''), function (path, node) {\n    var existing = syncTree.calcCompleteEventCache(path);\n    util.assert(existing !== null && typeof existing !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\n    resolvedTree.remember(path, resolveDeferredValueSnapshot(node, existing, serverValues));\n  });\n  return resolvedTree;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredValue(rawPri, existing.getPriority(), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredValue(leafNode.getValue(), existing, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValueSnapshot(childNode, existing.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\n\n\nvar OperationSource =\n/** @class */\nfunction () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/\n  true, false, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/\n  true, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @param {string} queryId\r\n   * @return {!OperationSource}\r\n   */\n\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/\n    true, queryId,\n    /*tagged=*/\n    true);\n  };\n\n  return OperationSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   * @param {!boolean} revert\r\n   */\n  function AckUserWrite(\n  /**@inheritDoc */\n  path,\n  /**@inheritDoc */\n  affectedTree,\n  /**@inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = OperationSource.User;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!this.path.isEmpty()) {\n      util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {?T} value\r\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n   */\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n  /**\r\n   * @template T\r\n   * @param {!Object.<string, !T>} obj\r\n   * @return {!ImmutableTree.<!T>}\r\n   */\n\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = ImmutableTree.Empty;\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   * @return {boolean}\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param {!Path} relativePath The remainder of the path\r\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n   *   node\r\n   * @return {?{path:!Path, value:!T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: Path.Empty,\n        value: this.value\n      };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        var front = relativePath.getFront();\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = new Path(front).child(childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   * @param {!Path} relativePath\r\n   * @return {?{path: !Path, value: !T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @param {!Path} relativePath\r\n   * @return {!ImmutableTree.<T>} The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      var front = relativePath.getFront();\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to set value at.\r\n   * @param {?T} toSet Value to set.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.set(relativePath.popFront(), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to value to remove.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(relativePath.popFront());\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param {!Path} relativePath Path to get value for.\r\n   * @return {?T} Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param {!Path} relativePath Path to replace subtree for.\r\n   * @param {!ImmutableTree} newTree New tree.\r\n   * @return {!ImmutableTree} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.setTree(relativePath.popFront(), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   * @template V\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(Path.Empty, fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   * @template V\r\n   * @param {!Path} pathSoFar\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   * @private\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   * @template V\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T):?V} f\r\n   * @return {?V}\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        var front = pathToFollow.getFront();\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T)} f\r\n   * @returns {!ImmutableTree.<T>}\r\n   */\n\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathToFollow.getFront();\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param {function(!Path, !T)} f A function to be called with\r\n   *   the path from the root of the tree to a node, and the value at that node.\r\n   *   Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n  /**\r\n   *\r\n   * @param {function(string, !T)} f\r\n   */\n\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  ImmutableTree.Empty = new ImmutableTree(null);\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /**@inheritDoc */\n  source,\n  /**@inheritDoc */\n  path,\n  /**@inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_\r\n   * @param {boolean} fullyInitialized_\r\n   * @param {boolean} filtered_\r\n   */\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!string} key\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  /**\r\n   * @return {!Node}\r\n   */\n\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!CacheNode} eventCache_\r\n   * @param {!CacheNode} serverCache_\r\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\r\n   * @param {!Node} eventSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\r\n   * @param {!Node} serverSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\r\n   * @const\r\n   * @type {ViewCache}\r\n   */\n\n\n  ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false), new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false));\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\n\n\nvar Change =\n/** @class */\nfunction () {\n  function Change(type, snapshotNode, childName, oldSnap, prevName) {\n    this.type = type;\n    this.snapshotNode = snapshotNode;\n    this.childName = childName;\n    this.oldSnap = oldSnap;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.valueChange = function (snapshot) {\n    return new Change(Change.VALUE, snapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childAddedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childRemovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} newSnapshot\r\n   * @param {!Node} oldSnapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childMovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }; //event types\n\n  /** Event type for a child added */\n\n\n  Change.CHILD_ADDED = 'child_added';\n  /** Event type for a child removed */\n\n  Change.CHILD_REMOVED = 'child_removed';\n  /** Event type for a child changed */\n\n  Change.CHILD_CHANGED = 'child_changed';\n  /** Event type for a child moved */\n\n  Change.CHILD_MOVED = 'child_moved';\n  /** Event type for a value change */\n\n  Change.VALUE = 'value';\n  return Change;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() == newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\n        } else {\n          util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    util.assert(type == Change.CHILD_ADDED || type == Change.CHILD_CHANGED || type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n    util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type == Change.CHILD_REMOVED && oldType == Change.CHILD_ADDED) {\n        this.changeMap[\"delete\"](childKey);\n      } else if (type == Change.CHILD_REMOVED && oldType == Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\n      } else if (type == Change.CHILD_CHANGED && oldType == Change.CHILD_ADDED) {\n        this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\n      } else if (type == Change.CHILD_CHANGED && oldType == Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw util.assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!WriteTreeRef} writes_\r\n   * @param {!ViewCache} viewCache_\r\n   * @param {?Node} optCompleteServerCache_\r\n   */\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Array.<!Change>} changes\r\n   */\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n * @constructor\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!NodeFilter} filter_\r\n   */\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   */\n\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @return {!ProcessorResult}\r\n   */\n\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw util.assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!ViewCache} newViewCache\r\n   * @param {!Array.<!Change>} accumulator\r\n   * @private\r\n   */\n\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(\n      /** @type {!Node} */\n      oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(Change.valueChange(\n        /** @type {!Node} */\n        newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} changePath\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!CompleteChildSource} source\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = changePath.getFront();\n\n        if (childKey == '.priority') {\n          util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = changePath.popFront(); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n    }\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = changePath.getFront();\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = changePath.popFront();\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey == '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = changePath.getFront();\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = changePath.popFront();\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {string} childKey\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!Node} node\r\n   * @param {ImmutableTree.<!Node>} merge\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} ackPath\r\n   * @param {!ImmutableTree<!boolean>} affectedTree\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = ImmutableTree.Empty;\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = ackPath.child(mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = path.getFront();\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   */\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    /**\r\n     * @private\r\n     * @type {!Index}\r\n     */\n\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n  /**\r\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n   *\r\n   * Notes:\r\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n   *    our index.\r\n   *  - prevName will be calculated based on the index ordering.\r\n   *\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {!Array.<!EventRegistration>} eventRegistrations\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n    var _this = this;\n\n    var events = [];\n    var moves = [];\n    changes.forEach(function (change) {\n      if (change.type === Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n        moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\n      }\n    });\n    this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\n    return events;\n  };\n  /**\r\n   * Given changes of a single change type, generate the corresponding events.\r\n   *\r\n   * @param {!Array.<!Event>} events\r\n   * @param {!string} eventType\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Array.<!EventRegistration>} registrations\r\n   * @param {!Node} eventCache\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n    var _this = this;\n\n    var filteredChanges = changes.filter(function (change) {\n      return change.type === eventType;\n    });\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(function (change) {\n      var materializedChange = _this.materializeSingleChange_(change, eventCache);\n\n      registrations.forEach(function (registration) {\n        if (registration.respondsTo(change.type)) {\n          events.push(registration.createEvent(materializedChange, _this.query_));\n        }\n      });\n    });\n  };\n  /**\r\n   * @param {!Change} change\r\n   * @param {!Node} eventCache\r\n   * @return {!Change}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n      /** @type {!string} */\n      change.childName, change.snapshotNode, this.index_);\n      return change;\n    }\n  };\n  /**\r\n   * @param {!Change} a\r\n   * @param {!Change} b\r\n   * @return {number}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.compareChanges_ = function (a, b) {\n    if (a.childName == null || b.childName == null) {\n      throw util.assertionError('Should only compare child_ events.');\n    }\n\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  };\n\n  return EventGenerator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   * @param {!ViewCache} initialViewCache\r\n   */\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = params.getNodeFilter();\n    /**\r\n     * @type {ViewProcessor}\r\n     * @private\r\n     */\n\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    /**\r\n     * @type {!ViewCache}\r\n     * @private\r\n     */\n\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    /**\r\n     * @type {!EventGenerator}\r\n     * @private\r\n     */\n\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n  /**\r\n   * @return {!Query}\r\n   */\n\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n  /**\r\n   * @param {!EventRegistration} eventRegistration\r\n   */\n\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        cancelError\n        /** @type {!Error} */\n        = cancelError;\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   *\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    util.assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n  /**\r\n   * @param {!EventRegistration} registration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n  /**\r\n   * @private\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {EventRegistration=} eventRegistration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function set(val) {\n      util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SyncPoint.prototype.isEmpty = function () {\n    return this.views.size === 0;\n  };\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var e_1, _a;\n\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = this.views.get(queryId);\n      util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events = [];\n\n      try {\n        for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var view = _c.value;\n          events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache Complete server cache, if we have it.\r\n   * @param {boolean} serverCacheComplete\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = this.views.get(queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(\n      /** @type {!Node} */\n      eventCache, eventCacheComplete, false), new CacheNode(\n      /** @type {!Node} */\n      serverCache, serverCacheComplete, false));\n      view = new View(query, viewCache);\n      this.views.set(queryId, view);\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var e_2, _a;\n\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      try {\n        // When you do ref.off(...), we search all views for the registration to remove.\n        for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = tslib.__read(_c.value, 2),\n              viewQueryId = _d[0],\n              view = _d[1];\n\n          cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n          if (view.isEmpty()) {\n            this.views[\"delete\"](viewQueryId); // We'll deal with complete views later.\n\n            if (!view.getQuery().getQueryParams().loadsAllData()) {\n              removed.push(view.getQuery());\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      var view = this.views.get(queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          this.views[\"delete\"](queryId); // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var e_3, _a;\n\n    var result = [];\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (!view.getQuery().getQueryParams().loadsAllData()) {\n          result.push(view);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n  /**\r\n   * @param path The path to the desired complete snapshot\r\n   * @return A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var e_4, _a;\n\n    var serverCache = null;\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        serverCache = serverCache || view.getCompleteServerCache(path);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return serverCache;\n  };\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  };\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var e_5, _a;\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (view.getQuery().getQueryParams().loadsAllData()) {\n          return view;\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.prototype.addWrite = function (path, node) {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n      if (rootmost != null) {\n        var rootMostPath = rootmost.path;\n        var value = rootmost.value;\n        var relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        var subtree = new ImmutableTree(node);\n        var newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  };\n\n  CompoundWrite.prototype.addWrites = function (path, updates) {\n    var newWrite = this;\n    each(updates, function (childKey, node) {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  };\n  /**\r\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n   * location, which must be removed by calling this method with that path.\r\n   *\r\n   * @param path The path at which a write and all deeper writes should be removed\r\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n   */\n\n\n  CompoundWrite.prototype.removeWrite = function (path) {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  };\n  /**\r\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n   * considered \"complete\".\r\n   *\r\n   * @param path The path to check for\r\n   * @return Whether there is a complete write at that path\r\n   */\n\n\n  CompoundWrite.prototype.hasCompleteWrite = function (path) {\n    return this.getCompleteNode(path) != null;\n  };\n  /**\r\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n   * writes from deeper paths, but will return child nodes from a more shallow path.\r\n   *\r\n   * @param path The path to get a complete write\r\n   * @return The node if complete at that path, or null otherwise.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteNode = function (path) {\n    var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Returns all children that are guaranteed to be a complete overwrite.\r\n   *\r\n   * @return A list of all complete children.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteChildren = function () {\n    var children = [];\n    var node = this.writeTree_.value;\n\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n          children.push(new NamedNode(childName, childNode));\n        });\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n\n    return children;\n  };\n\n  CompoundWrite.prototype.childCompoundWrite = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      var shadowingNode = this.getCompleteNode(path);\n\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  };\n  /**\r\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n   * @return Whether this CompoundWrite is empty\r\n   */\n\n\n  CompoundWrite.prototype.isEmpty = function () {\n    return this.writeTree_.isEmpty();\n  };\n  /**\r\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n   * node\r\n   * @param node The node to apply this CompoundWrite to\r\n   * @return The node with all writes applied\r\n   */\n\n\n  CompoundWrite.prototype.apply = function (node) {\n    return applySubtreeWrite(Path.Empty, this.writeTree_, node);\n  };\n\n  CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\n  return CompoundWrite;\n}();\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     *\r\n     * @type {!CompoundWrite}\r\n     * @private\r\n     */\n    this.visibleWrites_ = CompoundWrite.Empty;\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     *\r\n     * @type {!Array.<!WriteRecord>}\r\n     * @private\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} snap\r\n   * @param {!number} writeId\r\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} writeId\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * @param {!number} writeId\r\n   * @return {?WriteRecord}\r\n   */\n\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @param {!number} writeId\r\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        each(children, function (childName) {\n          _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !subMerge.hasCompleteWrite(Path.Empty)) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(Path.Empty)) {\n          return null;\n        } else {\n          var filter = function filter(write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = merge_1.childCompoundWrite(new Path(childName)).apply(childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      merge_1.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!Path} childPath\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = treePath.child(childPath);\n\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = this.visibleWrites_.childCompoundWrite(path);\n\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = treePath.child(childKey);\n    var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = this.visibleWrites_.childCompoundWrite(treePath);\n    var shadowingNode = merge.getCompleteNode(Path.Empty);\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      for (var childName in writeRecord.children) {\n        if (writeRecord.children.hasOwnProperty(childName) && writeRecord.path.child(childName).contains(path)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.Empty;\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\n          }\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\n            } else {\n              var child = util.safeGet(write.children, relativePath.getFront());\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          }\n        } else {\n          throw util.assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path\r\n   * @param {!WriteTree} writeTree\r\n   */\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   * @param {!Path} path\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   *\r\n   * @param {?Node} completeServerData\r\n   * @param {!NamedNode} startPost\r\n   * @param {!number} count\r\n   * @param {boolean} reverse\r\n   * @param {!Index} index\r\n   * @return {!Array.<!NamedNode>}\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerCache\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   *\r\n   * @param {string} childName\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = ImmutableTree.Empty;\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param revert True if the given write failed and needs to be reverted\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = ImmutableTree.Empty;\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(Path.Empty, true);\n      } else {\n        each(write.children, function (pathString, node) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view\n      /** @type !View */\n      = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param eventRegistration If null, all callbacks are removed.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      /**\r\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n       */\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   *\r\n   * @param path The path to the data we want\r\n   * @param writeIdsToExclude A specific set to be excluded\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = Path.relativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        each(childMap, function (_key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap[\"delete\"](removedQueryKey);\n        this.tagToQueryMap[\"delete\"](removedQueryTag);\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   *\r\n   * @return The normalized query\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef();\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @return This method can return events to support synchronous data sources\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          each(childMap, function (_key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function hashFn() {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function onComplete(status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap.get(tag);\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n      * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n      * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(Path.Empty));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      var events = [];\n      var childName = operation.path.getFront();\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar AuthTokenProvider =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!FirebaseApp} app_\r\n   */\n  function AuthTokenProvider(app_) {\n    this.app_ = app_;\n  }\n  /**\r\n   * @param {boolean} forceRefresh\r\n   * @return {!Promise<FirebaseAuthTokenData>}\r\n   */\n\n\n  AuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, // .catch\n    function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    this.app_['INTERNAL']['addAuthTokenListener'](listener);\n  };\n\n  AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n  };\n\n  AuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return AuthTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!util.contains(this.counters_, name)) this.counters_[name] = 0;\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return util.deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = tslib.__assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\r\n * @constructor\r\n */\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && util.contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    /**\r\n     * @private\r\n     * @type {!Array.<EventList>}\r\n     */\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     * @private\r\n     * @type {!number}\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n  /**\r\n   * @param {!Array.<Event>} eventDataList The new events to queue.\r\n   */\n\n\n  EventQueue.prototype.queueEvents = function (eventDataList) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    var currList = null;\n\n    for (var i = 0; i < eventDataList.length; i++) {\n      var eventData = eventDataList[i];\n      var eventPath = eventData.getPath();\n\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n   * for the specified path.\r\n   *\r\n   * It is assumed that the new events are all for the specified path.\r\n   *\r\n   * @param {!Path} path The path to raise events for.\r\n   * @param {!Array.<Event>} eventDataList The new events to raise.\r\n   */\n\n\n  EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.equals(path);\n    });\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n   * locations related to the specified change path (i.e. all ancestors and descendants).\r\n   *\r\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n   *\r\n   * @param {!Path} changedPath The path to raise events for.\r\n   * @param {!Array.<!Event>} eventDataList The events to raise\r\n   */\n\n\n  EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  };\n  /**\r\n   * @param {!function(!Path):boolean} predicate\r\n   * @private\r\n   */\n\n\n  EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n    this.recursionDepth_++;\n    var sentAll = true;\n\n    for (var i = 0; i < this.eventLists_.length; i++) {\n      var eventList = this.eventLists_[i];\n\n      if (eventList) {\n        var eventPath = eventList.getPath();\n\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  };\n\n  return EventQueue;\n}();\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\n\n\nvar EventList =\n/** @class */\nfunction () {\n  function EventList(path_) {\n    this.path_ = path_;\n    /**\r\n     * @type {!Array.<Event>}\r\n     * @private\r\n     */\n\n    this.events_ = [];\n  }\n  /**\r\n   * @param {!Event} eventData\r\n   */\n\n\n  EventList.prototype.add = function (eventData) {\n    this.events_.push(eventData);\n  };\n  /**\r\n   * Iterates through the list and raises each event\r\n   */\n\n\n  EventList.prototype.raise = function () {\n    for (var i = 0; i < this.events_.length; i++) {\n      var eventData = this.events_[i];\n\n      if (eventData !== null) {\n        this.events_[i] = null;\n        var eventFn = eventData.getEventRunner();\n\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n\n        exceptionGuard(eventFn);\n      }\n    }\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  EventList.prototype.getPath = function () {\n    return this.path_;\n  };\n\n  return EventList;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Array.<string>} allowedEvents_\r\n   */\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   * @param {!string} eventType\r\n   * @param {...*} var_args\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var var_args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      var_args[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = tslib.__spread(this.listeners_[eventType]);\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, var_args);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    util.assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @extends {EventEmitter}\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  tslib.__extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  tslib.__extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !util.isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   * @param {number} requestNum\r\n   * @param {Array} data\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string} connId An identifier for this connection, used for logging\r\n   * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n   * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   *\r\n   * @param {function(Object)} onMessage Callback when messages arrive\r\n   * @param {function()} onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null;\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) return; //Set up a callback that gets triggered once a connection is set up.\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = tslib.__read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) return; // we closed the connection.\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command == FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = tslib.__read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (util.isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param {!Object} data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = util.base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   * @param {!string} id\r\n   * @param {!string} pw\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (util.isNodeSdk()) return;\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   * @param {*} args\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = util.stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!util.isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   * @private\r\n   * @return {Element}\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n    } else if (iframe.document) {\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param {!string} id - The ID of this connection\r\n   * @param {!string} pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param {!string} url - The URL of the script tag.\r\n   * @param {!number} serial - The serial number of the request.\r\n   * @private\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests[\"delete\"](serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param {!string} url - The URL for the script tag source.\r\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (util.isNodeSdk()) {\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) return;\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url;\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string} connId identifier for this transport\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n  }\n  /**\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return {string} connection url\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!util.isNodeSdk() && typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   *\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (util.isNodeSdk()) {\n        var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') == 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        this.mySock = new WebSocketImpl(this.connURL);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.');\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   * @return {boolean}\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length == this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = util.jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param {number} frameCount The number of frames we are expecting from the server\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @param {!String} data\r\n   * @return {?String} Any remaining data to be process, or null if there is none\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    util.assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param {Object} data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive();\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param {string} str String to send.\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   * @type {number}\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   * @type {number}\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    /**\r\n     * @const\r\n     * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n     */\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @param {!RepoInfo} repoInfo\r\n   * @private\r\n   */\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n   * initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n   * transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} id - an id for this connection\r\n   * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n   * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   * @private\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeout_ms > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        }\n      }, Math.floor(healthyTimeout_ms));\n    }\n  };\n  /**\r\n   * @return {!string}\r\n   * @private\r\n   */\n\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ != 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   *\r\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer == 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer == 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer == 'c') {\n      this.onControl_(data);\n    } else if (layer == 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {Object} handshake The handshake data returned from the server\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ == 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   *\r\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n  /**\r\n   *\r\n   * @param {string} reason\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n  /**\r\n   *\r\n   * @private\r\n   */\n\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, ?string)} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param {string} token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\r\n   * @param {Object.<string, *>} stats\r\n   */\n\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PersistentConnection, _super);\n  /**\r\n   * @implements {ServerActions}\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !util.isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(util.stringify(msg));\n    util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\n      var warnings = util.safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || util.isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    if (hash !== undefined) request[\n    /*hash*/\n    'h'] = hash; // TODO: Only keep track of the most recent put for a given path?\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) onComplete(message[\n      /*status*/\n      's'], message[\n      /* data */\n      'd']);\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + util.stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') this.onDataUpdate_(body[\n    /*path*/\n    'p'], body[\n    /*data*/\n    'd'],\n    /*isMerge*/\n    false, body['t']);else if (action === 'm') this.onDataUpdate_(body[\n    /*path*/\n    'p'], body[\n    /*data*/\n    'd'],\n    /*isMerge=*/\n    true, body['t']);else if (action === 'c') this.onListenRevoked_(body[\n    /*path*/\n    'p'], body[\n    /*query*/\n    'q']);else if (action === 'ac') this.onAuthRevoked_(body[\n    /*status code*/\n    's'], body[\n    /* explanation */\n    'd']);else if (action === 'sd') this.onSecurityDebugPacket_(body);else error('Unrecognized action received from server: ' + util.stringify(action) + '\\nAre you using the latest client?');\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_();\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (util.CONSTANTS.NODE_ADMIN) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (util.isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) put.onComplete('disconnect');\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) this.outstandingPuts_ = [];\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) listen.onComplete('permission_denied');\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map[\"delete\"](queryId);\n\n      if (map.size === 0) {\n        this.listens[\"delete\"](normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e[\"return\"])) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c[\"return\"])) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) this.sendPut_(i);\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (util.CONSTANTS.NODE_ADMIN) {\n      clientName = 'admin_node';\n    } else if (util.CONSTANTS.NODE_CLIENT) {\n      clientName = 'node';\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (util.isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (util.isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return util.isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  tslib.__extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n   * @param {AuthTokenProvider} authTokenProvider_\r\n   * @implements {ServerActions}\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     *\r\n     * @private {!Object.<string, !Object>}\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {?number=} tag\r\n   * @return {string}\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = query.getQueryParams().toRestQueryStringParameters();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (util.safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error == 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   *\r\n   * @param {!string} pathString\r\n   * @param {!Object.<string, *>} queryStringParameters\r\n   * @param {?function(?number, *=)} callback\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + util.querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = util.jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient, app) {\n    var _this = this;\n\n    this.repoInfo_ = repoInfo_;\n    this.app = app;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = new SparseSnapshotTree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null;\n    var authTokenProvider = new AuthTokenProvider(app);\n    this.stats_ = StatsManager.getCollection(repoInfo_);\n\n    if (forceRestClient || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          util.stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    authTokenProvider.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    });\n    this.transactions_init_(); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function stopListening() {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n\n          _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function stopListening(query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  }\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = util.map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = util.map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  }; // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (key, value) {\n      _this.updateInfo_(key, value);\n    });\n  };\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  };\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  };\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    each(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      var newNodeUnresolved = nodeFromJSON$1(changedValue);\n      changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, _this.serverSyncTree_.calcCompleteEventCache(path), serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n\n        _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      each(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(path.child(changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, this.serverSyncTree_, serverValues);\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  };\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (util.isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        each(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(path.child(childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') return;\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) this.statsListener_ = new StatsListener(this.stats_);\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    each(stats, function (stat, value) {\n      var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n      for (var i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n\n      console.log(paddedStat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n\n  Repo.prototype.log_ = function () {\n    var var_args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      var_args[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, tslib.__spread([prefix], var_args));\n  };\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status == 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n          if (errorReason) message += ': ' + errorReason;\n          var error = new Error(message);\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function get() {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n  /**\r\n   * @param {!NamedNode} node\r\n   * @return {boolean}\r\n   */\n\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!Node} snap\r\n   * @param {string} childKey\r\n   * @param {!Node} childSnap\r\n   * @param {!CompleteChildSource} source\r\n   * @param {?ChildChangeAccumulator} changeAccumulator\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    util.assert(oldEventCache.numChildren() == this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n  /**\r\n   * @return {boolean} True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   * @return {!number}\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    util.assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n  /**\r\n   * @return {!Index}\r\n   */\n\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   * @private\r\n   */\n\n\n  QueryParams.prototype.copy_ = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limit = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToFirst = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToLast = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.startAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.startSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexStartValue_ = indexValue;\n\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.endAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.endSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexEndValue_ = indexValue;\n\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {!Index} index\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.orderBy = function (index) {\n    var newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  };\n  /**\r\n   * @return {!Object}\r\n   */\n\n\n  QueryParams.prototype.getQueryObject = function () {\n    var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    var obj = {};\n\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      var viewFrom = this.viewFrom_;\n\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    } // For now, priority index is the default, so we only specify if it's some other index\n\n\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n\n    return obj;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\n  };\n  /**\r\n   * @return {!NodeFilter}\r\n   */\n\n\n  QueryParams.prototype.getNodeFilter = function () {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  };\n  /**\r\n   * Returns a set of REST query string parameters representing this query.\r\n   *\r\n   * @return {!Object.<string,*>} query string parameters\r\n   */\n\n\n  QueryParams.prototype.toRestQueryStringParameters = function () {\n    var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    var qs = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    var orderBy;\n\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n\n    qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\n\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\n\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  };\n  /**\r\n   * Wire Protocol Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n\n  QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n  /**\r\n   * REST Query Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n  QueryParams.REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n  /**\r\n   * Default, empty query parameters\r\n   * @type {!QueryParams}\r\n   * @const\r\n   */\n\n  QueryParams.DEFAULT = new QueryParams();\n  return QueryParams;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  tslib.__extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   *\r\n   * @param {!Repo} repo\r\n   * @param {(!Path)} path\r\n   * @extends {Query}\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    util.validateArgCount('Reference.key', 0, 0, arguments.length);\n    if (this.path.isEmpty()) return null;else return this.path.getBack();\n  };\n  /**\r\n   * @param {!(string|Path)} pathString\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.child = function (pathString) {\n    util.validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null) validateRootPathString('Reference.child', 1, pathString, false);else validatePathString('Reference.child', 1, pathString, false);\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    util.validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    util.validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    util.validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    util.validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    util.validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {string|number|null} newPriority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\n    if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.remove = function (onComplete) {\n    util.validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    util.validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n  /**\r\n   * @param {function(*):*} transactionUpdate\r\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n   * @param {boolean=} applyLocally\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    util.validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n    if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    if (applyLocally === undefined) applyLocally = true;\n    var deferred = new util.Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise[\"catch\"](function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n  /**\r\n   * @param {string|number|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    util.validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*=} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.push = function (value, onComplete) {\n    util.validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    util.validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef[\"catch\"] = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise[\"catch\"](function () {});\n    }\n\n    return thennablePushRef;\n  };\n  /**\r\n   * @return {!OnDisconnect}\r\n   */\n\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {string=} name_ Optional name of the node.\r\n   * @param {Tree=} parent_ Optional parent node.\r\n   * @param {TreeNode=} node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param {!(string|Path)} pathObj Path to look up.\r\n   * @return {!Tree.<T>} Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next;\n\n    while ((next = path.getFront()) !== null) {\n      var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return {?T} The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param {!T} value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return {boolean} Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return {boolean} Whether the tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    each(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) action(this);\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n    if (includeSelf && childrenFirst) action(this);\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n   * @return {boolean} true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) action(child);else child.forEachImmediateDescendantWithValue(action);\n    });\n  };\n  /**\r\n   * @return {!Path} The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return {string} The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   *\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) this.parent_.updateChild_(this.name_, this);\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param {string} childName The name of the child to update.\r\n   * @param {!Tree.<T>} child The child to update.\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = util.contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n\n/**\r\n * @enum {number}\r\n */\n\n\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\n\n\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\n\nRepo.prototype.transactions_init_ = function () {\n  /**\r\n   * Stores queues of outstanding transactions for Firebase locations.\r\n   *\r\n   * @type {!Tree.<Array.<!Transaction>>}\r\n   * @private\r\n   */\n  this.transactionQueueTree_ = new Tree();\n};\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\n\n\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n  this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n  var valueCallback = function valueCallback() {};\n\n  var watchRef = new Reference(this, path);\n  watchRef.on('value', valueCallback);\n\n  var unwatcher = function unwatcher() {\n    watchRef.off('value', valueCallback);\n  }; // Initialize transaction.\n\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = this.getLatestState_(path);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = TransactionStatus.RUN;\n    var queueNode = this.transactionQueueTree_.subTree(path);\n    var nodeQueue = queueNode.getValue() || [];\n    nodeQueue.push(transaction);\n    queueNode.setValue(nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our transaction state, since the user could\n    // start new transactions from the event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && util.contains(newVal, '.priority')) {\n      priorityForNode = util.safeGet(newVal, '.priority');\n      util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    priorityForNode\n    /** @type {null|number|string} */\n    = priorityForNode;\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    this.sendReadyTransactions_();\n  }\n};\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\n\n\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\n  return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n};\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\n\n\nRepo.prototype.sendReadyTransactions_ = function (node) {\n  var _this = this;\n\n  if (node === void 0) {\n    node = this.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    this.pruneCompletedTransactionsBelowNode_(node);\n  }\n\n  if (node.getValue() !== null) {\n    var queue = this.buildTransactionQueue_(node);\n    util.assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === TransactionStatus.RUN;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      this.sendTransactionQueue_(node.path(), queue);\n    }\n  } else if (node.hasChildren()) {\n    node.forEachChild(function (childNode) {\n      _this.sendReadyTransactions_(childNode);\n    });\n  }\n};\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\n\n\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\n  var _this = this; // Mark transactions as sent and increment retry count!\n\n\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = this.getLatestState_(path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    var relativePath = Path.relativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /**@type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    _this.log_('transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n      // the callback could trigger more transactions or sets.\n      var callbacks = [];\n\n      for (var i = 0; i < queue.length; i++) {\n        queue[i].status = TransactionStatus.COMPLETED;\n        events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this transaction is complete, it should be set\n          var node = queue[i].currentOutputSnapshotResolved;\n          var ref = new Reference(_this, queue[i].path);\n          var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n        }\n\n        queue[i].unwatcher();\n      } // Now remove the completed transactions.\n\n\n      _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n      _this.sendReadyTransactions_();\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, events); // Finally, trigger onComplete callbacks.\n\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) queue[i].status = TransactionStatus.NEEDS_ABORT;else queue[i].status = TransactionStatus.RUN;\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.NEEDS_ABORT;\n          queue[i].abortReason = status;\n        }\n      }\n\n      _this.rerunTransactions_(path);\n    }\n  }, latestHash);\n};\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\n\n\nRepo.prototype.rerunTransactions_ = function (changedPath) {\n  var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n  var path = rootMostTransactionNode.path();\n  var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n  this.rerunTransactionQueue_(queue, path);\n  return path;\n};\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\n\n\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n  // the callback could trigger more transactions or sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === TransactionStatus.RUN;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  for (var i = 0; i < queue.length; i++) {\n    var transaction = queue[i];\n    var relativePath = Path.relativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason = void 0;\n    util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON$1(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && util.contains(newData, '.priority');\n\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = this.generateServerValues();\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n      }\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n      // So defer the unwatcher until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n          var lastInput\n          /** @type {!Node} */\n          = queue[i].currentInputSnapshot;\n          var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n        }\n      }\n    }\n  } // Clean up completed transactions.\n\n\n  this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  this.sendReadyTransactions_();\n};\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\n\n\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n\n  var transactionNode = this.transactionQueueTree_;\n\n  while ((front = path.getFront()) !== null && transactionNode.getValue() === null) {\n    transactionNode = transactionNode.subTree(front);\n    path = path.popFront();\n  }\n\n  return transactionNode;\n};\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\n\n\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n};\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\n\n\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n  var _this = this;\n\n  var nodeQueue = node.getValue();\n\n  if (nodeQueue !== null) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  node.forEachChild(function (child) {\n    _this.aggregateTransactionQueuesForNode_(child, queue);\n  });\n};\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\n\n\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n  var _this = this;\n\n  var queue = node.getValue();\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n\n    queue.length = to;\n    node.setValue(queue.length > 0 ? queue : null);\n  }\n\n  node.forEachChild(function (childNode) {\n    _this.pruneCompletedTransactionsBelowNode_(childNode);\n  });\n};\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\n\n\nRepo.prototype.abortTransactions_ = function (path) {\n  var _this = this;\n\n  var affectedPath = this.getAncestorTransactionNode_(path).path();\n  var transactionNode = this.transactionQueueTree_.subTree(path);\n  transactionNode.forEachAncestor(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  this.abortTransactionsOnNode_(transactionNode);\n  transactionNode.forEachDescendant(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  return affectedPath;\n};\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\n\n\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\n  var queue = node.getValue();\n\n  if (queue !== null) {\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n    // can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n        util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i; // Mark transaction for abort when it comes back.\n\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          var snapshot = null;\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      node.setValue(null);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** @const {string} */\n\n\nvar DATABASE_URL_OPTION = 'databaseURL';\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    /**\r\n     * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n     */\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     * @private {boolean}\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    for (var appName in this.repos_) {\n      for (var dbUrl in this.repos_[appName]) {\n        this.repos_[appName][dbUrl].interrupt();\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    for (var appName in this.repos_) {\n      for (var dbUrl in this.repos_[appName]) {\n        this.repos_[appName][dbUrl].resume();\n      }\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   *\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Database}\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, url) {\n    var dbUrl = url || app.options[DATABASE_URL_OPTION];\n\n    if (dbUrl === undefined) {\n      fatal(\"Can't determine Firebase Database URL.  Be sure to include \" + DATABASE_URL_OPTION + ' option when calling firebase.initializeApp().');\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl);\n    var repoInfo = parsedUrl.repoInfo;\n    var dbEmulatorHost = undefined;\n\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n      parsedUrl = parseRepoInfo(dbUrl);\n      repoInfo = parsedUrl.repoInfo;\n    }\n\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!parsedUrl.path.isEmpty()) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   * @param {!Repo} repo\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = util.safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.repoInfo_.toURLString()];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Repo} The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app) {\n    var appRepos = util.safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = util.safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   * @param {boolean} forceRestClient\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   * @param {!Repo} repo_\r\n   */\n  function Database(repo_) {\n    this.repo_ = repo_;\n\n    if (!(repo_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n    /** @type {Reference} */\n\n\n    this.root_ = new Reference(repo_, Path.Empty);\n    this.INTERNAL = new DatabaseInternals(this);\n  }\n\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    util.validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @param {string} url\r\n   * @return {!Reference} Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    util.validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n  /**\r\n   * @param {string} apiName\r\n   */\n\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repo_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    util.validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    util.validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    _increment: function _increment(x) {\n      return {\n        '.sv': {\n          'increment': x\n        }\n      };\n    }\n  };\n  return Database;\n}();\n\nvar DatabaseInternals =\n/** @class */\nfunction () {\n  /** @param {!Database} database */\n  function DatabaseInternals(database) {\n    this.database = database;\n  }\n  /** @return {Promise<void>} */\n\n\n  DatabaseInternals.prototype[\"delete\"] = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      return tslib.__generator(this, function (_a) {\n        this.database.checkDeleted_('delete');\n        RepoManager.getInstance().deleteRepo(this.database.repo_);\n        this.database.repo_ = null;\n        this.database.root_ = null;\n        this.database.INTERNAL = null;\n        this.database = null;\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return DatabaseInternals;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n\nvar INTERNAL =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection;\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n};\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\n    if (opt_hash !== undefined) {\n      opt_hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\n\n\nvar ConnectionTarget = RepoInfo;\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) {\n    return RepoManager.getInstance().databaseFromApp(app, url);\n  }, // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }, null, true);\n\n  if (util.isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","import '@firebase/database';","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}