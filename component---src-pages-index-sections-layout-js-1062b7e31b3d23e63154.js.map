{"version":3,"sources":["webpack:///./src/pages/index/sections/Layout.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/pages/index/sections/FixedScreen.js"],"names":["Layout","children","pageIndicator","className","indicatorRefs","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","FixedScreen","styles","fixedScreen","map","ref","index","indicatorContainer","pageIndicatorLabel","label","source","onClick","targetRef","target","window","scrollTo","top","current","offsetTop","left","behavior","pageIndicatorList","isActive","active"],"mappings":"+FAAA,4CAuBeA,UAnBA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC1B,OACE,yBAAKC,UAAU,UACb,kBAAC,UAAD,CACEC,cAAeF,IAEhBD,K,qBCVP,QAAQ,QASR,WACE,aAEA,IAAII,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC3C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,QAEV,GAAgB,WAAZJ,EACT,IAAK,IAAIM,KAAOP,EACVP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAC/BX,EAAQM,KAAKK,IAMrB,OAAOX,EAAQa,KAAK,KAGeC,EAAOC,SAC1ChB,EAAoB,QAAIA,EACxBe,EAAOC,QAAUhB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAxCL,I,kCCTA,0EAqCeiB,UA/BK,SAAC,GAAuB,IAArBpB,EAAoB,EAApBA,cASrB,OACE,yBAAKD,UAAWsB,IAAOC,aACrB,yBAAKvB,UAAWsB,IAAOvB,eAEnBE,GAAiBA,EAAcuB,KAAI,SAACC,EAAKC,GACvC,OACE,0BAAMV,IAAKU,EAAO1B,UAAWsB,IAAOK,oBAClC,0BAAM3B,UAAWsB,IAAOM,oBAAqBH,EAAII,OACjD,0BAAMJ,IAAKA,EAAIK,OAAQC,QAAS,kBAhB7BC,EAgB4CP,EAAIQ,YAf/DC,OAAOC,SAAS,CACdC,IAAKJ,EAAUK,QAAQC,UACvBC,KAAM,EACNC,SAAU,WAJG,IAAAR,GAgByDhC,UAAWI,IAAW,CAACkB,IAAOmB,kBAAmBhB,EAAIiB,SAAWpB,IAAOqB,OAAS","file":"component---src-pages-index-sections-layout-js-1062b7e31b3d23e63154.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport FixedScreen from './FixedScreen'\n\nconst Layout = ({ children, pageIndicator }) => {\n  return (\n    <div className=\"layout\"> \n      <FixedScreen\n        indicatorRefs={pageIndicator}\n      />\n      {children}\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  pageIndicator: PropTypes.array, // eslint-disable-line\n}\n\nexport default Layout","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nimport classNames from 'classnames'\nimport styles from './FixedScreen.module.scss'\n\nconst FixedScreen = ({ indicatorRefs }) => {\n  const navigate = targetRef => {\n    window.scrollTo({\n      top: targetRef.current.offsetTop,\n      left: 0,\n      behavior: 'smooth'\n    })\n  }\n\n  return (\n    <div className={styles.fixedScreen}>\n      <div className={styles.pageIndicator}>\n        {\n          indicatorRefs && indicatorRefs.map((ref, index) => {\n            return (\n              <span key={index} className={styles.indicatorContainer}>\n                <span className={styles.pageIndicatorLabel}>{ref.label}</span>\n                <span ref={ref.source} onClick={() => navigate(ref.target)} className={classNames([styles.pageIndicatorList, ref.isActive ? styles.active : ''])} />\n              </span>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nFixedScreen.propTypes = {\n  indicatorRefs: PropTypes.array.isRequired\n};\n\nexport default FixedScreen;"],"sourceRoot":""}