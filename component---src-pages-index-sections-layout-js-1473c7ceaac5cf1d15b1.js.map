{"version":3,"sources":["webpack:///./src/pages/index/sections/Layout.js","webpack:///./src/pages/index/sections/FixedScreen.js"],"names":["Layout","children","pageIndicator","className","indicatorRefs","FixedScreen","styles","fixedScreen","map","ref","index","key","indicatorContainer","pageIndicatorLabel","label","source","onClick","targetRef","target","window","scrollTo","top","current","offsetTop","left","behavior","classNames","pageIndicatorList","isActive","active"],"mappings":"+FAAA,4CAuBeA,UAnBA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC1B,OACE,yBAAKC,UAAU,UACb,kBAAC,UAAD,CACEC,cAAeF,IAEhBD,K,kCCVP,0EAqCeI,UA/BK,SAAC,GAAuB,IAArBD,EAAoB,EAApBA,cASrB,OACE,yBAAKD,UAAWG,IAAOC,aACrB,yBAAKJ,UAAWG,IAAOJ,eAEnBE,GAAiBA,EAAcI,KAAI,SAACC,EAAKC,GACvC,OACE,0BAAMC,IAAKD,EAAOP,UAAWG,IAAOM,oBAClC,0BAAMT,UAAWG,IAAOO,oBAAqBJ,EAAIK,OACjD,0BAAML,IAAKA,EAAIM,OAAQC,QAAS,kBAhB7BC,EAgB4CR,EAAIS,YAf/DC,OAAOC,SAAS,CACdC,IAAKJ,EAAUK,QAAQC,UACvBC,KAAM,EACNC,SAAU,WAJG,IAAAR,GAgByDd,UAAWuB,IAAW,CAACpB,IAAOqB,kBAAmBlB,EAAImB,SAAWtB,IAAOuB,OAAS","file":"component---src-pages-index-sections-layout-js-1473c7ceaac5cf1d15b1.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport FixedScreen from './FixedScreen'\n\nconst Layout = ({ children, pageIndicator }) => {\n  return (\n    <div className=\"layout\"> \n      <FixedScreen\n        indicatorRefs={pageIndicator}\n      />\n      {children}\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  pageIndicator: PropTypes.array, // eslint-disable-line\n}\n\nexport default Layout","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nimport classNames from 'classnames'\nimport styles from './FixedScreen.module.scss'\n\nconst FixedScreen = ({ indicatorRefs }) => {\n  const navigate = targetRef => {\n    window.scrollTo({\n      top: targetRef.current.offsetTop,\n      left: 0,\n      behavior: 'smooth'\n    })\n  }\n\n  return (\n    <div className={styles.fixedScreen}>\n      <div className={styles.pageIndicator}>\n        {\n          indicatorRefs && indicatorRefs.map((ref, index) => {\n            return (\n              <span key={index} className={styles.indicatorContainer}>\n                <span className={styles.pageIndicatorLabel}>{ref.label}</span>\n                <span ref={ref.source} onClick={() => navigate(ref.target)} className={classNames([styles.pageIndicatorList, ref.isActive ? styles.active : ''])} />\n              </span>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nFixedScreen.propTypes = {\n  indicatorRefs: PropTypes.array.isRequired\n};\n\nexport default FixedScreen;"],"sourceRoot":""}